// Copyright 2021 The Rode Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.18.0
// source: intoto/attestation/v1alpha1/statement.proto

package v1alpha1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// A Statement ties together a subject, a predicate, and an attestation.
// See the in-toto attestation specification for more information: https://github.com/in-toto/attestation/tree/main/spec#statement
type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// XType indicates the Statement schema version.
	// buf:lint:ignore FIELD_LOWER_SNAKE_CASE
	XType *TypeURI `protobuf:"bytes,1,opt,name=_type,json=Type,proto3" json:"_type,omitempty"`
	// Subject is a list of software artifacts and their digests.
	Subject []*Statement_Subject `protobuf:"bytes,2,rep,name=subject,proto3" json:"subject,omitempty"`
	// PredicateType is a URI that indicates the schema for the Predicate.
	PredicateType *TypeURI `protobuf:"bytes,3,opt,name=predicate_type,json=predicateType,proto3" json:"predicate_type,omitempty"`
	// A Predicate contains arbitrary information about the subject, with a schema described by the PredicateType.
	Predicate *structpb.Struct `protobuf:"bytes,4,opt,name=predicate,proto3" json:"predicate,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_intoto_attestation_v1alpha1_statement_proto_rawDescGZIP(), []int{0}
}

func (x *Statement) GetXType() *TypeURI {
	if x != nil {
		return x.XType
	}
	return nil
}

func (x *Statement) GetSubject() []*Statement_Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Statement) GetPredicateType() *TypeURI {
	if x != nil {
		return x.PredicateType
	}
	return nil
}

func (x *Statement) GetPredicate() *structpb.Struct {
	if x != nil {
		return x.Predicate
	}
	return nil
}

// Envelope wraps a base64-encoded Statement and one or more signatures.
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PayloadType describes the payload encoding. It should be set to application/vnd.in-toto+json.
	PayloadType string `protobuf:"bytes,1,opt,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	// Payload is the base64-encoded Statement.
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// Signatures should include at least one signature of the payload.
	Signatures []*Envelope_Signature `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_intoto_attestation_v1alpha1_statement_proto_rawDescGZIP(), []int{1}
}

func (x *Envelope) GetPayloadType() string {
	if x != nil {
		return x.PayloadType
	}
	return ""
}

func (x *Envelope) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Envelope) GetSignatures() []*Envelope_Signature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// A Subject is any software artifact.
type Statement_Subject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is a stable identifier for the artifact. An underscore can be used if the name isn't meaningful.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Digest is a set of hashes for the artifact.
	Digest *DigestSet `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *Statement_Subject) Reset() {
	*x = Statement_Subject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement_Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement_Subject) ProtoMessage() {}

func (x *Statement_Subject) ProtoReflect() protoreflect.Message {
	mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement_Subject.ProtoReflect.Descriptor instead.
func (*Statement_Subject) Descriptor() ([]byte, []int) {
	return file_intoto_attestation_v1alpha1_statement_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Statement_Subject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Statement_Subject) GetDigest() *DigestSet {
	if x != nil {
		return x.Digest
	}
	return nil
}

// Signature is a DSSE-formatted (https://github.com/secure-systems-lab/dsse) signature
type Envelope_Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sig is the base64-encoded signature
	Sig string `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Envelope_Signature) Reset() {
	*x = Envelope_Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope_Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope_Signature) ProtoMessage() {}

func (x *Envelope_Signature) ProtoReflect() protoreflect.Message {
	mi := &file_intoto_attestation_v1alpha1_statement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope_Signature.ProtoReflect.Descriptor instead.
func (*Envelope_Signature) Descriptor() ([]byte, []int) {
	return file_intoto_attestation_v1alpha1_statement_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Envelope_Signature) GetSig() string {
	if x != nil {
		return x.Sig
	}
	return ""
}

var File_intoto_attestation_v1alpha1_statement_proto protoreflect.FileDescriptor

var file_intoto_attestation_v1alpha1_statement_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x69, 0x6e, 0x74, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x69,
	0x6e, 0x74, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x27, 0x69, 0x6e, 0x74, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf3, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x69, 0x6e, 0x74, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x52, 0x49, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e,
	0x74, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69,
	0x6e, 0x74, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x52, 0x49, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x5d, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x4f, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x1a, 0x1d, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69,
	0x67, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_intoto_attestation_v1alpha1_statement_proto_rawDescOnce sync.Once
	file_intoto_attestation_v1alpha1_statement_proto_rawDescData = file_intoto_attestation_v1alpha1_statement_proto_rawDesc
)

func file_intoto_attestation_v1alpha1_statement_proto_rawDescGZIP() []byte {
	file_intoto_attestation_v1alpha1_statement_proto_rawDescOnce.Do(func() {
		file_intoto_attestation_v1alpha1_statement_proto_rawDescData = protoimpl.X.CompressGZIP(file_intoto_attestation_v1alpha1_statement_proto_rawDescData)
	})
	return file_intoto_attestation_v1alpha1_statement_proto_rawDescData
}

var file_intoto_attestation_v1alpha1_statement_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_intoto_attestation_v1alpha1_statement_proto_goTypes = []interface{}{
	(*Statement)(nil),          // 0: intoto.attestation.v1alpha1.Statement
	(*Envelope)(nil),           // 1: intoto.attestation.v1alpha1.Envelope
	(*Statement_Subject)(nil),  // 2: intoto.attestation.v1alpha1.Statement.Subject
	(*Envelope_Signature)(nil), // 3: intoto.attestation.v1alpha1.Envelope.Signature
	(*TypeURI)(nil),            // 4: intoto.attestation.v1alpha1.TypeURI
	(*structpb.Struct)(nil),    // 5: google.protobuf.Struct
	(*DigestSet)(nil),          // 6: intoto.attestation.v1alpha1.DigestSet
}
var file_intoto_attestation_v1alpha1_statement_proto_depIdxs = []int32{
	4, // 0: intoto.attestation.v1alpha1.Statement._type:type_name -> intoto.attestation.v1alpha1.TypeURI
	2, // 1: intoto.attestation.v1alpha1.Statement.subject:type_name -> intoto.attestation.v1alpha1.Statement.Subject
	4, // 2: intoto.attestation.v1alpha1.Statement.predicate_type:type_name -> intoto.attestation.v1alpha1.TypeURI
	5, // 3: intoto.attestation.v1alpha1.Statement.predicate:type_name -> google.protobuf.Struct
	3, // 4: intoto.attestation.v1alpha1.Envelope.signatures:type_name -> intoto.attestation.v1alpha1.Envelope.Signature
	6, // 5: intoto.attestation.v1alpha1.Statement.Subject.digest:type_name -> intoto.attestation.v1alpha1.DigestSet
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_intoto_attestation_v1alpha1_statement_proto_init() }
func file_intoto_attestation_v1alpha1_statement_proto_init() {
	if File_intoto_attestation_v1alpha1_statement_proto != nil {
		return
	}
	file_intoto_attestation_v1alpha1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_intoto_attestation_v1alpha1_statement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intoto_attestation_v1alpha1_statement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intoto_attestation_v1alpha1_statement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement_Subject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intoto_attestation_v1alpha1_statement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope_Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_intoto_attestation_v1alpha1_statement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_intoto_attestation_v1alpha1_statement_proto_goTypes,
		DependencyIndexes: file_intoto_attestation_v1alpha1_statement_proto_depIdxs,
		MessageInfos:      file_intoto_attestation_v1alpha1_statement_proto_msgTypes,
	}.Build()
	File_intoto_attestation_v1alpha1_statement_proto = out.File
	file_intoto_attestation_v1alpha1_statement_proto_rawDesc = nil
	file_intoto_attestation_v1alpha1_statement_proto_goTypes = nil
	file_intoto_attestation_v1alpha1_statement_proto_depIdxs = nil
}
