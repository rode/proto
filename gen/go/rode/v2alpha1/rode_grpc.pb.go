// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v2alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// RodeServiceClient is the client API for RodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RodeServiceClient interface {
	// CreateStatement records any statements sent from externals sources.
	CreateStatement(ctx context.Context, in *CreateStatementRequest, opts ...grpc.CallOption) (*CreateStatementResponse, error)
}

type rodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRodeServiceClient(cc grpc.ClientConnInterface) RodeServiceClient {
	return &rodeServiceClient{cc}
}

func (c *rodeServiceClient) CreateStatement(ctx context.Context, in *CreateStatementRequest, opts ...grpc.CallOption) (*CreateStatementResponse, error) {
	out := new(CreateStatementResponse)
	err := c.cc.Invoke(ctx, "/rode.v2alpha1.RodeService/CreateStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RodeServiceServer is the server API for RodeService service.
// All implementations should embed UnimplementedRodeServiceServer
// for forward compatibility
type RodeServiceServer interface {
	// CreateStatement records any statements sent from externals sources.
	CreateStatement(context.Context, *CreateStatementRequest) (*CreateStatementResponse, error)
}

// UnimplementedRodeServiceServer should be embedded to have forward compatible implementations.
type UnimplementedRodeServiceServer struct {
}

func (UnimplementedRodeServiceServer) CreateStatement(context.Context, *CreateStatementRequest) (*CreateStatementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStatement not implemented")
}

// UnsafeRodeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RodeServiceServer will
// result in compilation errors.
type UnsafeRodeServiceServer interface {
	mustEmbedUnimplementedRodeServiceServer()
}

func RegisterRodeServiceServer(s grpc.ServiceRegistrar, srv RodeServiceServer) {
	s.RegisterService(&_RodeService_serviceDesc, srv)
}

func _RodeService_CreateStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RodeServiceServer).CreateStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rode.v2alpha1.RodeService/CreateStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RodeServiceServer).CreateStatement(ctx, req.(*CreateStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rode.v2alpha1.RodeService",
	HandlerType: (*RodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStatement",
			Handler:    _RodeService_CreateStatement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rode/v2alpha1/rode.proto",
}
